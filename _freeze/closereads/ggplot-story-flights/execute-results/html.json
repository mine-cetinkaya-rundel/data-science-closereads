{
  "hash": "edcbee9936e668902edf202eec4c4dc2",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: Visualizing RDU flights\nsubtitle: An introduction to ggplot2\nformat:\n  closeread-html:\n    cr-section:\n      layout: overlay-left\n    cr-style:\n      narrative-background-color-overlay: transparent\n      narrative-background-color-sidebar: transparent\n      section-background-color: transparent\n      narrative-text-color-overlay: black\nknitr:\n  opts_chunk: \n    dev.args:\n      bg: transparent\ncomments:\n  hypothesis: true\n---\n\n<!-- Data Dictionary: <https://www.transtats.bts.gov/Fields.asp?gnoyr_VQ=FGJ> -->\n\n## Introduction\n\nThis project uses a dataset from the American Statistical Association's Data Expo, which provides comprehensive flight information covering various aspects of flight operations. The dataset contains data about flights across the United States, recording details such as departure times, scheduled and actual arrival times, flight durations, distances, and reasons for delays.\n\n## Data\n\nIn this tutorial, we'll focus specifically on the flights departing from Raleigh-Durham International Airport (RDU) and heading to destinations in North Carolina and California. You'll learn how to visualize data to uncover patterns in departure and arrival delays. By the end of this tutorial, you should be able to craft visual narratives that are informative and visually appealing, providing you with a fundamental skill set critical in the field of data science.\n\nThe packages we used in this tutorial for plotting include **ggplot2** and **ggthemes**. \n\n::: {.cell}\n\n:::\n\nIn our visualization, we explore the relationship between departure delays (`dep_delay`) and arrival delays (`arr_delay`) for flights from Raleigh-Durham International Airport (RDU) to destinations in North Carolina and California. The graph you will learn to create visually compares the length of departure delays to arrival delays.\n\n::: {.cell}\n::: {.cell-output .cell-output-stderr}\n\n```\nRows: 59416 Columns: 110\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (27): reporting_airline, iata_code_reporting_airline, tail_number, orig...\ndbl  (57): year, quarter, month, day_of_month, day_of_week, dot_id_reporting...\nlgl  (25): div3airport, div3airport_id, div3airport_seq_id, div3wheels_on, d...\ndate  (1): flight_date\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n\n\n:::\n:::\n\n## Plot\n\nWe'll start by loading our data, then move on to constructing our plot using ggplot2. This will involve mapping our variables to the appropriate axes, customizing the aesthetic elements of our plot, and refining our visual with tools designed to enhance clarity and impact. The resultant plot is provided below, along with a full narrative on how it is constructed.\n\nStart with the `flights_rdu` data frame. Map `dep_delay` to the x-axis and map `arr_delay` to the y-axis. Represent each observation with a point and map species to the color of each point. Adjust the alpha parameter to 0.5 to make the points slightly transparent. Next, we add titles, subtitles, and axis labels. Title the plot \"Departure Delay and Arrival Delay\", add the subtitle \"Flights from RDU to NC and CA\", label the x and y axes as \"Departure Delay (min)\" and \"Arrival Delay (min)\", respectively, label the legend “destination_state”, and add a caption for the data source. Finally, use a discrete color scale that is designed to be perceived by viewers with common forms of color blindness. Change the theme of the plot using `theme_minimal()`.\n\n::: {.cell}\n::: {.cell-output-display}\n![](ggplot-story-flights_files/figure-html/target-plot-1.png){width=672}\n:::\n:::\n\n## How to read the scrolly-telling story\n\nBefore we start, let's look at how to read the scrolly-telling story. As you progress through the narrative, you'll notice that the code that creates the exact plot displayed is included as part of the narrative column on the left. On the right, below the plot, we include the code that creates the resultant visualization, with the code necessary to achieve the described step highlighted. For instance, in the current step where we discuss adding titles, subtitles, and axis labels, the corresponding labs() function in the code chunk is highlighted to indicate exactly where and how these elements are integrated into the plot.\n\n![Scrolly-telling demonstration](images/read-ggplot.png)\n\n\n::::{.cr-section}\n:::{focus-on=\"cr-plot-1\" highlight=\"2\"}\n**Start with the `flights_rdu` data frame.**\n::: {.cell}\n\n```{.r .cell-code}\nggplot(\n  data = flights_rdu, \n)\n```\n:::\n:::\n:::{#cr-plot-1}\n::: {.cell}\n::: {.cell-output-display}\n![](ggplot-story-flights_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(\n  flights_rdu, \n  aes(\n    x = dep_delay, \n    y = arr_delay\n  )\n) +\n  geom_point(\n    aes(color = destination_state), \n    alpha = 0.5\n  ) +\n  labs(\n    title = \"dep_delay and Energy\",\n    subtitle = \"Flights from RDU to NC and CA\",\n    x = \"Departure Delay (min)\", \n    y = \"Arrival Delay (min)\",\n    color = \"destination_state\",\n    caption = \"Source: The Annual Data Challenge Expo\"\n  ) +\n  scale_color_colorblind() +\n  theme_minimal()\n```\n:::\n:::\n\n:::{focus-on=\"cr-plot-2\" highlight=\"3\"}\nStart with the `flights_rdu` data frame. **Map `dep_delay` to the x-axis**.\n::: {.cell}\n\n```{.r .cell-code}\nggplot(\n  data = flights_rdu, \n  mapping = aes(x = dep_delay)\n)\n```\n:::\n:::\n:::{#cr-plot-2}\n::: {.cell}\n::: {.cell-output-display}\n![](ggplot-story-flights_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(\n  flights_rdu, \n  aes(\n    x = dep_delay, \n    y = arr_delay\n  )\n) +\n  geom_point(\n    aes(color = destination_state), \n    alpha = 0.5\n  ) +\n  labs(\n    title = \"dep_delay and Energy\",\n    subtitle = \"Flights from RDU to NC and CA\",\n    x = \"Departure Delay (min)\", \n    y = \"Arrival Delay (min)\",\n    color = \"destination_state\",\n    caption = \"Source: The Annual Data Challenge Expo\"\n  ) +\n  scale_color_colorblind() +\n  theme_minimal()\n```\n:::\n:::\n:::{focus-on=\"cr-plot-3\" highlight=\"4,5\"}\nStart with the `flights_rdu` data frame. Map `dep_delay` to the x-axis and **map `arr_delay` to the y-axis**.\n::: {.cell}\n\n```{.r .cell-code}\nggplot(\n  data = flights_rdu, \n  mapping = aes(\n    x = dep_delay,\n    y = arr_delay\n  )\n)\n```\n:::\n:::\n:::{#cr-plot-3}\n::: {.cell}\n::: {.cell-output-display}\n![](ggplot-story-flights_files/figure-html/unnamed-chunk-11-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(\n  flights_rdu, \n  aes(\n    x = dep_delay, \n    y = arr_delay\n  )\n) +\n  geom_point(\n    aes(color = destination_state), \n    alpha = 0.5\n  ) +\n  labs(\n    title = \"dep_delay and Energy\",\n    subtitle = \"Flights from RDU to NC and CA\",\n    x = \"Departure Delay (min)\", \n    y = \"Arrival Delay (min)\",\n    color = \"destination_state\",\n    caption = \"Source: The Annual Data Challenge Expo\"\n  ) +\n  scale_color_colorblind() +\n  theme_minimal()\n```\n:::\n:::\n\n:::{focus-on=\"cr-plot-4\" highlight=\"8,11\"}\nStart with the `flights_rdu` data frame. Map `dep_delay` to the x-axis and map `arr_delay` to the y-axis. **Represent each observation with a point**.\n::: {.cell}\n\n```{.r .cell-code}\nggplot(\n  flights_rdu, \n  aes(\n    x = dep_delay, \n    y = arr_delay\n  )\n) +\n  geom_point()\n```\n:::\n:::\n:::{#cr-plot-4}\n::: {.cell}\n::: {.cell-output-display}\n![](ggplot-story-flights_files/figure-html/unnamed-chunk-14-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(\n  flights_rdu, \n  aes(\n    x = dep_delay, \n    y = arr_delay\n  )\n) +\n  geom_point(\n    aes(color = destination_state), \n    alpha = 0.5\n  ) +\n  labs(\n    title = \"dep_delay and Energy\",\n    subtitle = \"Flights from RDU to NC and CA\",\n    x = \"Departure Delay (min)\", \n    y = \"Arrival Delay (min)\",\n    color = \"destination_state\",\n    caption = \"Source: The Annual Data Challenge Expo\"\n  ) +\n  scale_color_colorblind() +\n  theme_minimal()\n```\n:::\n:::\n\n:::{focus-on=\"cr-plot-5\" highlight=\"9\"}\nStart with the `flights_rdu` data frame. Map `dep_delay` to the x-axis and map `arr_delay` to the y-axis. Represent each observation with a point and **map species to the color of each point**.\n::: {.cell}\n\n```{.r .cell-code}\nggplot(\n  flights_rdu, \n  aes(\n    x = dep_delay, \n    y = arr_delay\n  )\n) +\n  geom_point(\n    aes(color = destination_state)\n  )\n```\n:::\n:::\n:::{#cr-plot-5}\n::: {.cell}\n::: {.cell-output-display}\n![](ggplot-story-flights_files/figure-html/unnamed-chunk-17-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(\n  flights_rdu, \n  aes(\n    x = dep_delay, \n    y = arr_delay\n  )\n) +\n  geom_point(\n    aes(color = destination_state), \n    alpha = 0.5\n  ) +\n  labs(\n    title = \"dep_delay and Energy\",\n    subtitle = \"Flights from RDU to NC and CA\",\n    x = \"Departure Delay (min)\", \n    y = \"Arrival Delay (min)\",\n    color = \"destination_state\",\n    caption = \"Source: The Annual Data Challenge Expo\"\n  ) +\n  scale_color_colorblind() +\n  theme_minimal()\n```\n:::\n:::\n:::{focus-on=\"cr-plot-6\" highlight=\"10\"}\nStart with the `flights_rdu` data frame. Map `dep_delay` to the x-axis and map `arr_delay` to the y-axis. Represent each observation with a point and map species to the color of each point. **Adjust the alpha parameter to 0.5 to make the points slightly transparent**.\n::: {.cell}\n\n```{.r .cell-code}\nggplot(\n  flights_rdu, \n  aes(\n    x = dep_delay, \n    y = arr_delay\n  )\n) +\n  geom_point(\n    aes(color = destination_state), \n    alpha = 0.5\n  )\n```\n:::\n:::\n:::{#cr-plot-6}\n::: {.cell}\n::: {.cell-output-display}\n![](ggplot-story-flights_files/figure-html/unnamed-chunk-20-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(\n  flights_rdu, \n  aes(\n    x = dep_delay, \n    y = arr_delay\n  )\n) +\n  geom_point(\n    aes(color = destination_state), \n    alpha = 0.5\n  ) +\n  labs(\n    title = \"dep_delay and Energy\",\n    subtitle = \"Flights from RDU to NC and CA\",\n    x = \"Departure Delay (min)\", \n    y = \"Arrival Delay (min)\",\n    color = \"destination_state\",\n    caption = \"Source: The Annual Data Challenge Expo\"\n  ) +\n  scale_color_colorblind() +\n  theme_minimal()\n```\n:::\n:::\n:::{focus-on=\"cr-plot-7\" highlight=\"12,19\"}\nStart with the `flights_rdu` data frame. Map `dep_delay` to the x-axis and map `arr_delay` to the y-axis. Represent each observation with a point and map species to the color of each point. Adjust the alpha parameter to 0.5 to make the points slightly transparent. **Next, we add titles, subtitles, and axis labels**.\n::: {.cell}\n\n```{.r .cell-code}\nggplot(\n  flights_rdu, \n  aes(\n    x = dep_delay, \n    y = arr_delay\n  )\n) +\n  geom_point(\n    aes(color = destination_state), \n    alpha = 0.5\n  ) +\n  labs(\n    \n  )\n```\n:::\n:::\n:::{#cr-plot-7}\n::: {.cell}\n::: {.cell-output-display}\n![](ggplot-story-flights_files/figure-html/unnamed-chunk-23-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(\n  flights_rdu, \n  aes(\n    x = dep_delay, \n    y = arr_delay\n  )\n) +\n  geom_point(\n    aes(color = destination_state), \n    alpha = 0.5\n  ) +\n  labs(\n    title = \"dep_delay and Energy\",\n    subtitle = \"Flights from RDU to NC and CA\",\n    x = \"Departure Delay (min)\", \n    y = \"Arrival Delay (min)\",\n    color = \"destination_state\",\n    caption = \"Source: The Annual Data Challenge Expo\"\n  ) +\n  scale_color_colorblind() +\n  theme_minimal()\n```\n:::\n:::\n\n:::{focus-on=\"cr-plot-8\" highlight=\"13\"}\nStart with the `flights_rdu` data frame. Map `dep_delay` to the x-axis and map `arr_delay` to the y-axis. Represent each observation with a point and map species to the color of each point. Adjust the alpha parameter to 0.5 to make the points slightly transparent. Next, we add titles, subtitles, and axis labels. **Title the plot \"Departure Delay and Arrival Delay\"**.\n::: {.cell}\n\n```{.r .cell-code}\nggplot(\n  flights_rdu, \n  aes(\n    x = dep_delay, \n    y = arr_delay\n  )\n) +\n  geom_point(\n    aes(color = destination_state), \n    alpha = 0.5\n  ) +\n  labs(\n    title = \"dep_delay and Energy\"\n  )\n```\n:::\n:::\n:::{#cr-plot-8}\n::: {.cell}\n::: {.cell-output-display}\n![](ggplot-story-flights_files/figure-html/unnamed-chunk-26-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(\n  flights_rdu, \n  aes(\n    x = dep_delay, \n    y = arr_delay\n  )\n) +\n  geom_point(\n    aes(color = destination_state), \n    alpha = 0.5\n  ) +\n  labs(\n    title = \"dep_delay and Energy\",\n    subtitle = \"Flights from RDU to NC and CA\",\n    x = \"Departure Delay (min)\", \n    y = \"Arrival Delay (min)\",\n    color = \"destination_state\",\n    caption = \"Source: The Annual Data Challenge Expo\"\n  ) +\n  scale_color_colorblind() +\n  theme_minimal()\n```\n:::\n:::\n:::{focus-on=\"cr-plot-9\" highlight=\"14\"}\nStart with the `flights_rdu` data frame. Map `dep_delay` to the x-axis and map `arr_delay` to the y-axis. Represent each observation with a point and map species to the color of each point. Adjust the alpha parameter to 0.5 to make the points slightly transparent. Next, we add titles, subtitles, and axis labels. Title the plot \"Departure Delay and Arrival Delay\", **add the subtitle \"Flights from RDU to NC and CA\"**.\n::: {.cell}\n\n```{.r .cell-code}\nggplot(\n  flights_rdu, \n  aes(\n    x = dep_delay, \n    y = arr_delay\n  )\n) +\n  geom_point(\n    aes(color = destination_state), \n    alpha = 0.5\n  ) +\n  labs(\n    title = \"dep_delay and Energy\",\n    subtitle = \"Flights from RDU to NC and CA\"\n  )\n```\n:::\n:::\n:::{#cr-plot-9}\n::: {.cell}\n::: {.cell-output-display}\n![](ggplot-story-flights_files/figure-html/unnamed-chunk-29-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(\n  flights_rdu, \n  aes(\n    x = dep_delay, \n    y = arr_delay\n  )\n) +\n  geom_point(\n    aes(color = destination_state), \n    alpha = 0.5\n  ) +\n  labs(\n    title = \"dep_delay and Energy\",\n    subtitle = \"Flights from RDU to NC and CA\",\n    x = \"Departure Delay (min)\", \n    y = \"Arrival Delay (min)\",\n    color = \"destination_state\",\n    caption = \"Source: The Annual Data Challenge Expo\"\n  ) +\n  scale_color_colorblind() +\n  theme_minimal()\n```\n:::\n:::\n\n:::{focus-on=\"cr-plot-10\" highlight=\"15-16\"}\nStart with the `flights_rdu` data frame. Map `dep_delay` to the x-axis and map `arr_delay` to the y-axis. Represent each observation with a point and map species to the color of each point. Adjust the alpha parameter to 0.5 to make the points slightly transparent. Next, we add titles, subtitles, and axis labels. Title the plot \"Departure Delay and Arrival Delay\", add the subtitle \"Flights from RDU to NC and CA\", **label the x and y axes as \"Departure Delay (min)\" and \"Arrival Delay (min)\", respectively**.\n::: {.cell}\n\n```{.r .cell-code}\nggplot(\n  flights_rdu, \n  aes(\n    x = dep_delay, \n    y = arr_delay\n  )\n) +\n  geom_point(\n    aes(color = destination_state), \n    alpha = 0.5\n  ) +\n  labs(\n    title = \"dep_delay and Energy\",\n    subtitle = \"Flights from RDU to NC and CA\",\n    x = \"Departure Delay (min)\", \n    y = \"Arrival Delay (min)\"\n  )\n```\n:::\n:::\n\n:::{#cr-plot-10}\n::: {.cell}\n::: {.cell-output-display}\n![](ggplot-story-flights_files/figure-html/unnamed-chunk-32-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(\n  flights_rdu, \n  aes(\n    x = dep_delay, \n    y = arr_delay\n  )\n) +\n  geom_point(\n    aes(color = destination_state), \n    alpha = 0.5\n  ) +\n  labs(\n    title = \"dep_delay and Energy\",\n    subtitle = \"Flights from RDU to NC and CA\",\n    x = \"Departure Delay (min)\", \n    y = \"Arrival Delay (min)\",\n    color = \"destination_state\",\n    caption = \"Source: The Annual Data Challenge Expo\"\n  ) +\n  scale_color_colorblind() +\n  theme_minimal()\n```\n:::\n:::\n\n:::{focus-on=\"cr-plot-11\" highlight=\"17\"}\nStart with the `flights_rdu` data frame. Map `dep_delay` to the x-axis and map `arr_delay` to the y-axis. Represent each observation with a point and map species to the color of each point. Adjust the alpha parameter to 0.5 to make the points slightly transparent. Next, we add titles, subtitles, and axis labels. Title the plot \"Departure Delay and Arrival Delay\", add the subtitle \"Flights from RDU to NC and CA\", label the x and y axes as \"Departure Delay (min)\" and \"Arrival Delay (min)\", respectively, **label the legend “destination_state”**.\n::: {.cell}\n\n```{.r .cell-code}\nggplot(\n  flights_rdu, \n  aes(\n    x = dep_delay, \n    y = arr_delay\n  )\n) +\n  geom_point(\n    aes(color = destination_state), \n    alpha = 0.5\n  ) +\n  labs(\n    title = \"dep_delay and Energy\",\n    subtitle = \"Flights from RDU to NC and CA\",\n    x = \"Departure Delay (min)\", \n    y = \"Arrival Delay (min)\",\n    color = \"destination_state\"\n  )\n```\n:::\n:::\n\n:::{#cr-plot-11}\n::: {.cell}\n::: {.cell-output-display}\n![](ggplot-story-flights_files/figure-html/unnamed-chunk-35-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(\n  flights_rdu, \n  aes(\n    x = dep_delay, \n    y = arr_delay\n  )\n) +\n  geom_point(\n    aes(color = destination_state), \n    alpha = 0.5\n  ) +\n  labs(\n    title = \"dep_delay and Energy\",\n    subtitle = \"Flights from RDU to NC and CA\",\n    x = \"Departure Delay (min)\", \n    y = \"Arrival Delay (min)\",\n    color = \"destination_state\",\n    caption = \"Source: The Annual Data Challenge Expo\"\n  ) +\n  scale_color_colorblind() +\n  theme_minimal()\n```\n:::\n:::\n\n:::{focus-on=\"cr-plot-12\" highlight=\"18\"}\nStart with the `flights_rdu` data frame. Map `dep_delay` to the x-axis and map `arr_delay` to the y-axis. Represent each observation with a point and map species to the color of each point. Adjust the alpha parameter to 0.5 to make the points slightly transparent. Next, we add titles, subtitles, and axis labels. Title the plot \"Departure Delay and Arrival Delay\", add the subtitle \"Flights from RDU to NC and CA\", label the x and y axes as \"Departure Delay (min)\" and \"Arrival Delay (min)\", respectively, label the legend “destination_state”, and **add a caption for the data source**.\n::: {.cell}\n\n```{.r .cell-code}\nggplot(\n  flights_rdu, \n  aes(\n    x = dep_delay, \n    y = arr_delay\n  )\n) +\n  geom_point(\n    aes(color = destination_state), \n    alpha = 0.5\n  ) +\n  labs(\n    title = \"dep_delay and Energy\",\n    subtitle = \"Flights from RDU to NC and CA\",\n    x = \"Departure Delay (min)\", \n    y = \"Arrival Delay (min)\",\n    color = \"destination_state\",\n    caption = \"Source: The Annual Data Challenge Expo\"\n  )\n```\n:::\n:::\n:::{#cr-plot-12}\n::: {.cell}\n::: {.cell-output-display}\n![](ggplot-story-flights_files/figure-html/unnamed-chunk-38-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(\n  flights_rdu, \n  aes(\n    x = dep_delay, \n    y = arr_delay\n  )\n) +\n  geom_point(\n    aes(color = destination_state), \n    alpha = 0.5\n  ) +\n  labs(\n    title = \"dep_delay and Energy\",\n    subtitle = \"Flights from RDU to NC and CA\",\n    x = \"Departure Delay (min)\", \n    y = \"Arrival Delay (min)\",\n    color = \"destination_state\",\n    caption = \"Source: The Annual Data Challenge Expo\"\n  ) +\n  scale_color_colorblind() +\n  theme_minimal()\n```\n:::\n:::\n:::{focus-on=\"cr-plot-13\" highlight=\"20\"}\nStart with the `flights_rdu` data frame. Map `dep_delay` to the x-axis and map `arr_delay` to the y-axis. Represent each observation with a point and map species to the color of each point. Adjust the alpha parameter to 0.5 to make the points slightly transparent. Next, we add titles, subtitles, and axis labels. Title the plot \"Departure Delay and Arrival Delay\", add the subtitle \"Flights from RDU to NC and CA\", label the x and y axes as \"Departure Delay (min)\" and \"Arrival Delay (min)\", respectively, label the legend “destination_state”, and add a caption for the data source. **Finally, use a discrete color scale that is designed to be perceived by viewers with common forms of color blindness**.\n::: {.cell}\n\n```{.r .cell-code}\nggplot(\n  flights_rdu, \n  aes(\n    x = dep_delay, \n    y = arr_delay\n  )\n) +\n  geom_point(\n    aes(color = destination_state), \n    alpha = 0.5\n  ) +\n  labs(\n    title = \"dep_delay and Energy\",\n    subtitle = \"Flights from RDU to NC and CA\",\n    x = \"Departure Delay (min)\", \n    y = \"Arrival Delay (min)\",\n    color = \"destination_state\",\n    caption = \"Source: The Annual Data Challenge Expo\"\n  ) +\n  scale_color_colorblind()\n```\n:::\n:::\n:::{#cr-plot-13}\n::: {.cell}\n::: {.cell-output-display}\n![](ggplot-story-flights_files/figure-html/unnamed-chunk-41-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(\n  flights_rdu, \n  aes(\n    x = dep_delay, \n    y = arr_delay\n  )\n) +\n  geom_point(\n    aes(color = destination_state), \n    alpha = 0.5\n  ) +\n  labs(\n    title = \"dep_delay and Energy\",\n    subtitle = \"Flights from RDU to NC and CA\",\n    x = \"Departure Delay (min)\", \n    y = \"Arrival Delay (min)\",\n    color = \"destination_state\",\n    caption = \"Source: The Annual Data Challenge Expo\"\n  ) +\n  scale_color_colorblind() +\n  theme_minimal()\n```\n:::\n:::\n:::{focus-on=\"cr-plot-14\" highlight=\"21\"}\nStart with the `flights_rdu` data frame. Map `dep_delay` to the x-axis and map `arr_delay` to the y-axis. Represent each observation with a point and map species to the color of each point. Adjust the alpha parameter to 0.5 to make the points slightly transparent. Next, we add titles, subtitles, and axis labels. Title the plot \"Departure Delay and Arrival Delay\", add the subtitle \"Flights from RDU to NC and CA\", label the x and y axes as \"Departure Delay (min)\" and \"Arrival Delay (min)\", respectively, label the legend “destination_state”, and add a caption for the data source. Finally, use a discrete color scale that is designed to be perceived by viewers with common forms of color blindness. **Change the theme of the plot using `theme_minimal()`**.\n::: {.cell}\n\n```{.r .cell-code}\nggplot(\n  flights_rdu, \n  aes(\n    x = dep_delay, \n    y = arr_delay\n  )\n) +\n  geom_point(\n    aes(color = destination_state), \n    alpha = 0.5\n  ) +\n  labs(\n    title = \"dep_delay and Energy\",\n    subtitle = \"Flights from RDU to NC and CA\",\n    x = \"Departure Delay (min)\", \n    y = \"Arrival Delay (min)\",\n    color = \"destination_state\",\n    caption = \"Source: The Annual Data Challenge Expo\"\n  ) +\n  scale_color_colorblind() +\n  theme_minimal()\n```\n:::\n:::\n\n:::{#cr-plot-14}\n::: {.cell}\n::: {.cell-output-display}\n![](ggplot-story-flights_files/figure-html/unnamed-chunk-44-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(\n  flights_rdu, \n  aes(\n    x = dep_delay, \n    y = arr_delay\n  )\n) +\n  geom_point(\n    aes(color = destination_state), \n    alpha = 0.5\n  ) +\n  labs(\n    title = \"dep_delay and Energy\",\n    subtitle = \"Flights from RDU to NC and CA\",\n    x = \"Departure Delay (min)\", \n    y = \"Arrival Delay (min)\",\n    color = \"destination_state\",\n    caption = \"Source: The Annual Data Challenge Expo\"\n  ) +\n  scale_color_colorblind() +\n  theme_minimal()\n```\n:::\n:::\n::::\n\n## Notes\n\nIn this demo, we learned about how to build a ggplot using the RDU flights dataset as an example. Please write down something that you have learned...\n\n<input type=\"text\" id=\"inputText\" name=\"inputText\" placeholder=\"Type something...\" style=\"width: 50%; height: 200px; font-size: 20px; padding: 10px; border: 2px solid #000000; border-radius: 4px;\">\n",
    "supporting": [
      "ggplot-story-flights_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}
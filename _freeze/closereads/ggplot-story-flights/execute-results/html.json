{
  "hash": "857ea0be0ecd7967222098af0f0ed57b",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: Visualizing RDU flights\ndescription: This story explores flight delay pattern using visualizations built with ggplot2.\norder: 1\nimage: images/cover/ggplot.png\nimage-alt: ggplot illustration\nformat:\n  closeread-html:\n    cr-section:\n      layout: overlay-left\n    cr-style:\n      narrative-background-color-overlay: transparent\n      narrative-background-color-sidebar: transparent\n      section-background-color: transparent\n      narrative-text-color-overlay: black\nknitr:\n  opts_chunk: \n    dev.args:\n      bg: transparent\ncomments:\n  hypothesis: true\n---\n\n\n<!-- Data Dictionary: <https://www.transtats.bts.gov/Fields.asp?gnoyr_VQ=FGJ> -->\n\n# Introduction\n\nThis story explores flight delay pattern using visualizations built with **ggplot2**. Throughout the story, you'll learn how to visualize data to uncover patterns in departure and arrival delays. By the end of this story, you should be able to craft visual narratives that are informative and visually appealing, providing you with a fundamental skill set critical in the field of data science.\n\n## Data\n\nThis story uses data from flight arrival and departures for commercial flights across the USA. The data were originally curated for the American Statistical Association's [2025 Data Expo](https://community.amstat.org/dataexpo/home). The data include information on departure times, scheduled and actual arrival times, flight durations, distances, and reasons for delays. \n\nIn this story you will work with a subset of these data, consisting of flights department from the Raleigh-Durham International Airport (RDU), in November 2023, headed to destinations in North Carolina and California. It includes key variables such as departure and arrival delays, destination airport codes, airline names, and dates of travel. The data have already been filtered and transformed for these features, in order to provide you with a focused and compelling narrative.\n\nThe packages we used in this tutorial for plotting include **ggplot2** (which is distributed with the **tidyverse** meta package) and **ggthemes**. \n\n\n::: {.cell}\n\n:::\n\n\nIn our visualization, we explore the relationship between departure delays (`dep_delay`) and arrival delays (`arr_delay`) for flights from RDU to destinations in North Carolina (NC) and California (CA). The data frame we'll work with is called `flights_rdu`.\n\nThe story builds up to the following plot, which shows the relationship between departure and arrival delays.\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stderr}\n\n```\nRows: 59416 Columns: 110\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (27): reporting_airline, iata_code_reporting_airline, tail_number, orig...\ndbl  (57): year, quarter, month, day_of_month, day_of_week, dot_id_reporting...\nlgl  (25): div3airport, div3airport_id, div3airport_seq_id, div3wheels_on, d...\ndate  (1): flight_date\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n\n\n:::\n:::\n\n\n## Plot\n\nTo create this plot we will mao the variables to the appropriate aesthetic elements of the plot and customize and refine our visual with tools designed to enhance clarity and impact. The resulting plot is provided below, along with a full narrative on how it is constructed.\n\nStart with the `flights_rdu` data frame. Map `dep_delay` to the x-axis and map `arr_delay` to the y-axis. Represent each observation with a point and map species to the color of each point. Adjust the alpha parameter to 0.5 to make the points slightly transparent. Next, we add titles, subtitles, and axis labels. Title the plot \"Arrival vs. departure delay\", add the subtitle \"Flights from RDU to NC and CA\", label the x and y axes as \"Departure delay (min)\" and \"Arrival delay (min)\", respectively, label the legend “Destination state”, and add a caption for the data source. Finally, use a discrete color scale that is designed to be perceived by viewers with common forms of color blindness. Change the theme of the plot using `theme_minimal()`.\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](ggplot-story-flights_files/figure-html/target-plot-1.png){width=672}\n:::\n:::\n\n\n## How to read the scrolly-telling story\n\nBefore we start, let's look at how to read the scrolly-telling story. As you progress through the narrative, you'll notice that the code that creates the exact plot displayed is included as part of the narrative column on the left. On the right, below the plot, we include the code that creates the resulting visualization, with the code necessary to achieve the described step highlighted. For instance, in the current step where we discuss adding titles, subtitles, and axis labels, the corresponding `labs()` function in the code cell is highlighted to indicate exactly where and how these elements are integrated into the plot.\n\n![Scrolly-telling demonstration](images/read-ggplot.png)\n\n\n::::{.cr-section}\n:::{focus-on=\"cr-plot-1\" highlight=\"2\"}\n**Start with the `flights_rdu` data frame.**\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(\n  data = flights_rdu, \n)\n```\n:::\n\n:::\n:::{#cr-plot-1}\n\n::: {.cell}\n::: {.cell-output-display}\n![](ggplot-story-flights_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(\n  flights_rdu, \n  aes(\n    x = dep_delay, \n    y = arr_delay\n  )\n) +\n  geom_point(\n    aes(color = destination_state), \n    alpha = 0.5\n  ) +\n  labs(\n    title = \"Arrival vs. departure delay\",\n    subtitle = \"Flights from RDU to NC and CA\",\n    x = \"Departure delay (min)\", \n    y = \"Arrival delay (min)\",\n    color = \"Destination state\",\n    caption = \"Source: 2025 ASA Data Challenge Expo\"\n  ) +\n  scale_color_colorblind() +\n  theme_minimal()\n```\n:::\n\n:::\n\n:::{focus-on=\"cr-plot-2\" highlight=\"3,4,6\"}\nStart with the `flights_rdu` data frame. **Map `dep_delay` to the x-axis**.\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(\n  data = flights_rdu, \n  mapping = aes(x = dep_delay)\n)\n```\n:::\n\n:::\n:::{#cr-plot-2}\n\n::: {.cell}\n::: {.cell-output-display}\n![](ggplot-story-flights_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(\n  flights_rdu, \n  aes(\n    x = dep_delay, \n    y = arr_delay\n  )\n) +\n  geom_point(\n    aes(color = destination_state), \n    alpha = 0.5\n  ) +\n  labs(\n    title = \"Arrival vs. departure delay\",\n    subtitle = \"Flights from RDU to NC and CA\",\n    x = \"Departure delay (min)\", \n    y = \"Arrival delay (min)\",\n    color = \"Destination state\",\n    caption = \"Source: 2025 ASA Data Challenge Expo\"\n  ) +\n  scale_color_colorblind() +\n  theme_minimal()\n```\n:::\n\n:::\n:::{focus-on=\"cr-plot-3\" highlight=\"3-6\"}\nStart with the `flights_rdu` data frame. Map `dep_delay` to the x-axis and **map `arr_delay` to the y-axis**.\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(\n  data = flights_rdu, \n  mapping = aes(\n    x = dep_delay,\n    y = arr_delay\n  )\n)\n```\n:::\n\nTypically, when using `ggplot()`, the arguments `data` and `mapping` are often omitted for brevity and readability, assuming the context is clear. Instead, you would see the function call simplified as follows:\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(\n  flights_rdu, \n  aes(\n    x = dep_delay,\n    y = arr_delay\n  )\n)\n```\n:::\n\n:::\n:::{#cr-plot-3}\n\n::: {.cell}\n::: {.cell-output-display}\n![](ggplot-story-flights_files/figure-html/unnamed-chunk-12-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(\n  flights_rdu, \n  aes(\n    x = dep_delay, \n    y = arr_delay\n  )\n) +\n  geom_point(\n    aes(color = destination_state), \n    alpha = 0.5\n  ) +\n  labs(\n    title = \"Arrival vs. departure delay\",\n    subtitle = \"Flights from RDU to NC and CA\",\n    x = \"Departure delay (min)\", \n    y = \"Arrival delay (min)\",\n    color = \"Destination state\",\n    caption = \"Source: 2025 ASA Data Challenge Expo\"\n  ) +\n  scale_color_colorblind() +\n  theme_minimal()\n```\n:::\n\n:::\n\n:::{focus-on=\"cr-plot-4\" highlight=\"8,11\"}\nStart with the `flights_rdu` data frame. Map `dep_delay` to the x-axis and map `arr_delay` to the y-axis. **Represent each observation with a point**.\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(\n  flights_rdu, \n  aes(\n    x = dep_delay, \n    y = arr_delay\n  )\n) +\n  geom_point()\n```\n:::\n\n:::\n:::{#cr-plot-4}\n\n::: {.cell}\n::: {.cell-output-display}\n![](ggplot-story-flights_files/figure-html/unnamed-chunk-15-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(\n  flights_rdu, \n  aes(\n    x = dep_delay, \n    y = arr_delay\n  )\n) +\n  geom_point(\n    aes(color = destination_state), \n    alpha = 0.5\n  ) +\n  labs(\n    title = \"Arrival vs. departure delay\",\n    subtitle = \"Flights from RDU to NC and CA\",\n    x = \"Departure delay (min)\", \n    y = \"Arrival delay (min)\",\n    color = \"Destination state\",\n    caption = \"Source: 2025 ASA Data Challenge Expo\"\n  ) +\n  scale_color_colorblind() +\n  theme_minimal()\n```\n:::\n\n:::\n\n:::{focus-on=\"cr-plot-5\" highlight=\"9\"}\nStart with the `flights_rdu` data frame. Map `dep_delay` to the x-axis and map `arr_delay` to the y-axis. Represent each observation with a point and **map species to the color of each point**.\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(\n  flights_rdu, \n  aes(\n    x = dep_delay, \n    y = arr_delay\n  )\n) +\n  geom_point(\n    aes(color = destination_state)\n  )\n```\n:::\n\n:::\n:::{#cr-plot-5}\n\n::: {.cell}\n::: {.cell-output-display}\n![](ggplot-story-flights_files/figure-html/unnamed-chunk-18-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(\n  flights_rdu, \n  aes(\n    x = dep_delay, \n    y = arr_delay\n  )\n) +\n  geom_point(\n    aes(color = destination_state), \n    alpha = 0.5\n  ) +\n  labs(\n    title = \"Arrival vs. departure delay\",\n    subtitle = \"Flights from RDU to NC and CA\",\n    x = \"Departure delay (min)\", \n    y = \"Arrival delay (min)\",\n    color = \"Destination state\",\n    caption = \"Source: 2025 ASA Data Challenge Expo\"\n  ) +\n  scale_color_colorblind() +\n  theme_minimal()\n```\n:::\n\n:::\n:::{focus-on=\"cr-plot-6\" highlight=\"10\"}\nStart with the `flights_rdu` data frame. Map `dep_delay` to the x-axis and map `arr_delay` to the y-axis. Represent each observation with a point and map species to the color of each point. **Adjust the alpha parameter to 0.5 to make the points slightly transparent**.\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(\n  flights_rdu, \n  aes(\n    x = dep_delay, \n    y = arr_delay\n  )\n) +\n  geom_point(\n    aes(color = destination_state), \n    alpha = 0.5\n  )\n```\n:::\n\n:::\n:::{#cr-plot-6}\n\n::: {.cell}\n::: {.cell-output-display}\n![](ggplot-story-flights_files/figure-html/unnamed-chunk-21-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(\n  flights_rdu, \n  aes(\n    x = dep_delay, \n    y = arr_delay\n  )\n) +\n  geom_point(\n    aes(color = destination_state), \n    alpha = 0.5\n  ) +\n  labs(\n    title = \"Arrival vs. departure delay\",\n    subtitle = \"Flights from RDU to NC and CA\",\n    x = \"Departure delay (min)\", \n    y = \"Arrival delay (min)\",\n    color = \"Destination state\",\n    caption = \"Source: 2025 ASA Data Challenge Expo\"\n  ) +\n  scale_color_colorblind() +\n  theme_minimal()\n```\n:::\n\n:::\n\n:::{focus-on=\"cr-plot-7\" highlight=\"13\"}\nStart with the `flights_rdu` data frame. Map `dep_delay` to the x-axis and map `arr_delay` to the y-axis. Represent each observation with a point and map species to the color of each point. Adjust the alpha parameter to 0.5 to make the points slightly transparent. Next, we add titles, subtitles, and axis labels. **Title the plot \"Arrival vs. departure delay\"**.\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(\n  flights_rdu, \n  aes(\n    x = dep_delay, \n    y = arr_delay\n  )\n) +\n  geom_point(\n    aes(color = destination_state), \n    alpha = 0.5\n  ) +\n  labs(\n    title = \"Arrival vs. departure delay\"\n  )\n```\n:::\n\n:::\n:::{#cr-plot-7}\n\n::: {.cell}\n::: {.cell-output-display}\n![](ggplot-story-flights_files/figure-html/unnamed-chunk-24-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(\n  flights_rdu, \n  aes(\n    x = dep_delay, \n    y = arr_delay\n  )\n) +\n  geom_point(\n    aes(color = destination_state), \n    alpha = 0.5\n  ) +\n  labs(\n    title = \"Arrival vs. departure delay\",\n    subtitle = \"Flights from RDU to NC and CA\",\n    x = \"Departure delay (min)\", \n    y = \"Arrival delay (min)\",\n    color = \"Destination state\",\n    caption = \"Source: 2025 ASA Data Challenge Expo\"\n  ) +\n  scale_color_colorblind() +\n  theme_minimal()\n```\n:::\n\n:::\n:::{focus-on=\"cr-plot-8\" highlight=\"14\"}\nStart with the `flights_rdu` data frame. Map `dep_delay` to the x-axis and map `arr_delay` to the y-axis. Represent each observation with a point and map species to the color of each point. Adjust the alpha parameter to 0.5 to make the points slightly transparent. Next, we add titles, subtitles, and axis labels. Title the plot \"Arrival vs. departure delay\", **add the subtitle \"Flights from RDU to NC and CA\"**.\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(\n  flights_rdu, \n  aes(\n    x = dep_delay, \n    y = arr_delay\n  )\n) +\n  geom_point(\n    aes(color = destination_state), \n    alpha = 0.5\n  ) +\n  labs(\n    title = \"Arrival vs. departure delay\",\n    subtitle = \"Flights from RDU to NC and CA\"\n  )\n```\n:::\n\n:::\n:::{#cr-plot-8}\n\n::: {.cell}\n::: {.cell-output-display}\n![](ggplot-story-flights_files/figure-html/unnamed-chunk-27-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(\n  flights_rdu, \n  aes(\n    x = dep_delay, \n    y = arr_delay\n  )\n) +\n  geom_point(\n    aes(color = destination_state), \n    alpha = 0.5\n  ) +\n  labs(\n    title = \"Arrival vs. departure delay\",\n    subtitle = \"Flights from RDU to NC and CA\",\n    x = \"Departure delay (min)\", \n    y = \"Arrival delay (min)\",\n    color = \"Destination state\",\n    caption = \"Source: 2025 ASA Data Challenge Expo\"\n  ) +\n  scale_color_colorblind() +\n  theme_minimal()\n```\n:::\n\n:::\n\n:::{focus-on=\"cr-plot-9\" highlight=\"15-16\"}\nStart with the `flights_rdu` data frame. Map `dep_delay` to the x-axis and map `arr_delay` to the y-axis. Represent each observation with a point and map species to the color of each point. Adjust the alpha parameter to 0.5 to make the points slightly transparent. Next, we add titles, subtitles, and axis labels. Title the plot \"Arrival vs. departure delay\", add the subtitle \"Flights from RDU to NC and CA\", **label the x and y axes as \"Departure delay (min)\" and \"Arrival delay (min)\", respectively**.\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(\n  flights_rdu, \n  aes(\n    x = dep_delay, \n    y = arr_delay\n  )\n) +\n  geom_point(\n    aes(color = destination_state), \n    alpha = 0.5\n  ) +\n  labs(\n    title = \"Arrival vs. departure delay\",\n    subtitle = \"Flights from RDU to NC and CA\",\n    x = \"Departure delay (min)\", \n    y = \"Arrival delay (min)\"\n  )\n```\n:::\n\n:::\n\n:::{#cr-plot-9}\n\n::: {.cell}\n::: {.cell-output-display}\n![](ggplot-story-flights_files/figure-html/unnamed-chunk-30-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(\n  flights_rdu, \n  aes(\n    x = dep_delay, \n    y = arr_delay\n  )\n) +\n  geom_point(\n    aes(color = destination_state), \n    alpha = 0.5\n  ) +\n  labs(\n    title = \"Arrival vs. departure delay\",\n    subtitle = \"Flights from RDU to NC and CA\",\n    x = \"Departure delay (min)\", \n    y = \"Arrival delay (min)\",\n    color = \"Destination state\",\n    caption = \"Source: 2025 ASA Data Challenge Expo\"\n  ) +\n  scale_color_colorblind() +\n  theme_minimal()\n```\n:::\n\n:::\n\n:::{focus-on=\"cr-plot-10\" highlight=\"17\"}\nStart with the `flights_rdu` data frame. Map `dep_delay` to the x-axis and map `arr_delay` to the y-axis. Represent each observation with a point and map species to the color of each point. Adjust the alpha parameter to 0.5 to make the points slightly transparent. Next, we add titles, subtitles, and axis labels. Title the plot \"Arrival vs. departure delay\", add the subtitle \"Flights from RDU to NC and CA\", label the x and y axes as \"Departure delay (min)\" and \"Arrival delay (min)\", respectively, **label the legend “destination_state”**.\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(\n  flights_rdu, \n  aes(\n    x = dep_delay, \n    y = arr_delay\n  )\n) +\n  geom_point(\n    aes(color = destination_state), \n    alpha = 0.5\n  ) +\n  labs(\n    title = \"Arrival vs. departure delay\",\n    subtitle = \"Flights from RDU to NC and CA\",\n    x = \"Departure delay (min)\", \n    y = \"Arrival delay (min)\",\n    color = \"Destination state\"\n  )\n```\n:::\n\n:::\n\n:::{#cr-plot-10}\n\n::: {.cell}\n::: {.cell-output-display}\n![](ggplot-story-flights_files/figure-html/unnamed-chunk-33-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(\n  flights_rdu, \n  aes(\n    x = dep_delay, \n    y = arr_delay\n  )\n) +\n  geom_point(\n    aes(color = destination_state), \n    alpha = 0.5\n  ) +\n  labs(\n    title = \"Arrival vs. departure delay\",\n    subtitle = \"Flights from RDU to NC and CA\",\n    x = \"Departure delay (min)\", \n    y = \"Arrival delay (min)\",\n    color = \"Destination state\",\n    caption = \"Source: 2025 ASA Data Challenge Expo\"\n  ) +\n  scale_color_colorblind() +\n  theme_minimal()\n```\n:::\n\n:::\n\n:::{focus-on=\"cr-plot-11\" highlight=\"18\"}\nStart with the `flights_rdu` data frame. Map `dep_delay` to the x-axis and map `arr_delay` to the y-axis. Represent each observation with a point and map species to the color of each point. Adjust the alpha parameter to 0.5 to make the points slightly transparent. Next, we add titles, subtitles, and axis labels. Title the plot \"Arrival vs. departure delay\", add the subtitle \"Flights from RDU to NC and CA\", label the x and y axes as \"Departure delay (min)\" and \"Arrival delay (min)\", respectively, label the legend “destination_state”, and **add a caption for the data source**.\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(\n  flights_rdu, \n  aes(\n    x = dep_delay, \n    y = arr_delay\n  )\n) +\n  geom_point(\n    aes(color = destination_state), \n    alpha = 0.5\n  ) +\n  labs(\n    title = \"Arrival vs. departure delay\",\n    subtitle = \"Flights from RDU to NC and CA\",\n    x = \"Departure delay (min)\", \n    y = \"Arrival delay (min)\",\n    color = \"Destination state\",\n    caption = \"Source: 2025 ASA Data Challenge Expo\"\n  )\n```\n:::\n\n:::\n:::{#cr-plot-11}\n\n::: {.cell}\n::: {.cell-output-display}\n![](ggplot-story-flights_files/figure-html/unnamed-chunk-36-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(\n  flights_rdu, \n  aes(\n    x = dep_delay, \n    y = arr_delay\n  )\n) +\n  geom_point(\n    aes(color = destination_state), \n    alpha = 0.5\n  ) +\n  labs(\n    title = \"Arrival vs. departure delay\",\n    subtitle = \"Flights from RDU to NC and CA\",\n    x = \"Departure delay (min)\", \n    y = \"Arrival delay (min)\",\n    color = \"Destination state\",\n    caption = \"Source: 2025 ASA Data Challenge Expo\"\n  ) +\n  scale_color_colorblind() +\n  theme_minimal()\n```\n:::\n\n:::\n:::{focus-on=\"cr-plot-12\" highlight=\"20\"}\nStart with the `flights_rdu` data frame. Map `dep_delay` to the x-axis and map `arr_delay` to the y-axis. Represent each observation with a point and map species to the color of each point. Adjust the alpha parameter to 0.5 to make the points slightly transparent. Next, we add titles, subtitles, and axis labels. Title the plot \"Arrival vs. departure delay\", add the subtitle \"Flights from RDU to NC and CA\", label the x and y axes as \"Departure delay (min)\" and \"Arrival delay (min)\", respectively, label the legend “destination_state”, and add a caption for the data source. **Finally, use a discrete color scale that is designed to be perceived by viewers with common forms of color blindness**.\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(\n  flights_rdu, \n  aes(\n    x = dep_delay, \n    y = arr_delay\n  )\n) +\n  geom_point(\n    aes(color = destination_state), \n    alpha = 0.5\n  ) +\n  labs(\n    title = \"Arrival vs. departure delay\",\n    subtitle = \"Flights from RDU to NC and CA\",\n    x = \"Departure delay (min)\", \n    y = \"Arrival delay (min)\",\n    color = \"Destination state\",\n    caption = \"Source: 2025 ASA Data Challenge Expo\"\n  ) +\n  scale_color_colorblind()\n```\n:::\n\n:::\n:::{#cr-plot-12}\n\n::: {.cell}\n::: {.cell-output-display}\n![](ggplot-story-flights_files/figure-html/unnamed-chunk-39-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(\n  flights_rdu, \n  aes(\n    x = dep_delay, \n    y = arr_delay\n  )\n) +\n  geom_point(\n    aes(color = destination_state), \n    alpha = 0.5\n  ) +\n  labs(\n    title = \"Arrival vs. departure delay\",\n    subtitle = \"Flights from RDU to NC and CA\",\n    x = \"Departure delay (min)\", \n    y = \"Arrival delay (min)\",\n    color = \"Destination state\",\n    caption = \"Source: 2025 ASA Data Challenge Expo\"\n  ) +\n  scale_color_colorblind() +\n  theme_minimal()\n```\n:::\n\n:::\n:::{focus-on=\"cr-plot-13\" highlight=\"21\"}\nStart with the `flights_rdu` data frame. Map `dep_delay` to the x-axis and map `arr_delay` to the y-axis. Represent each observation with a point and map species to the color of each point. Adjust the alpha parameter to 0.5 to make the points slightly transparent. Next, we add titles, subtitles, and axis labels. Title the plot \"Arrival vs. departure delay\", add the subtitle \"Flights from RDU to NC and CA\", label the x and y axes as \"Departure delay (min)\" and \"Arrival delay (min)\", respectively, label the legend “destination_state”, and add a caption for the data source. Finally, use a discrete color scale that is designed to be perceived by viewers with common forms of color blindness. **Change the theme of the plot using `theme_minimal()`**.\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(\n  flights_rdu, \n  aes(\n    x = dep_delay, \n    y = arr_delay\n  )\n) +\n  geom_point(\n    aes(color = destination_state), \n    alpha = 0.5\n  ) +\n  labs(\n    title = \"Arrival vs. departure delay\",\n    subtitle = \"Flights from RDU to NC and CA\",\n    x = \"Departure delay (min)\", \n    y = \"Arrival delay (min)\",\n    color = \"Destination state\",\n    caption = \"Source: 2025 ASA Data Challenge Expo\"\n  ) +\n  scale_color_colorblind() +\n  theme_minimal()\n```\n:::\n\n:::\n\n:::{#cr-plot-13}\n\n::: {.cell}\n::: {.cell-output-display}\n![](ggplot-story-flights_files/figure-html/unnamed-chunk-42-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(\n  flights_rdu, \n  aes(\n    x = dep_delay, \n    y = arr_delay\n  )\n) +\n  geom_point(\n    aes(color = destination_state), \n    alpha = 0.5\n  ) +\n  labs(\n    title = \"Arrival vs. departure delay\",\n    subtitle = \"Flights from RDU to NC and CA\",\n    x = \"Departure delay (min)\", \n    y = \"Arrival delay (min)\",\n    color = \"Destination state\",\n    caption = \"Source: 2025 ASA Data Challenge Expo\"\n  ) +\n  scale_color_colorblind() +\n  theme_minimal()\n```\n:::\n\n:::\n::::\n\n# Reflection\n\nThrough this ggplot-based data story, we've explored a structured approach to building data visualizations using **ggplot2** in R. Starting from basic scatterplots and bar charts, we incrementally built visualizations by layering components such as geometries, scales, themes, and labels. We incorporated **ggthemes** to enhance the look of the plot. As we wrap up, take a moment to reflect on and note down what you've learned from this example:\n\n<input type=\"text\" id=\"inputText\" name=\"inputText\" placeholder=\"Type something...\" style=\"width: 50%; height: 200px; font-size: 20px; padding: 10px; border: 2px solid #000000; border-radius: 4px;\">\n",
    "supporting": [
      "ggplot-story-flights_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}
{
  "hash": "6de90f666208365b4001bcee2815afac",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: Flights Data Transformation Example\nsubtitle: Add subtitle\ndescription: Add a description\norder: 2\nformat:\n  closeread-html:\n    cr-section:\n      layout: overlay-left\n    cr-style:\n      narrative-background-color-overlay: transparent\n      narrative-background-color-sidebar: transparent\n      section-background-color: transparent\n      narrative-text-color-overlay: black\nknitr:\n  opts_chunk: \n    dev.args:\n      bg: transparent\ncomments:\n  hypothesis: true\nexecute: \n  eval: false\n---\n\n**Adapted from sample document from <https://closeread.dev/gallery/demos/build-up-plots/>**\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n:::\n\n::::{.cr-section}\n\nIn the first line we load the `tidyverse` package, which contains the `ggplot2` and `dplyr` packages we need. [@cr-dplyr]{highlight=\"1\"}\n\nWe then load the data frame `flights`. This dataset is now ready for analysis or manipulation in R. [@cr-dplyr]{highlight=\"2\"}\n\nThe main block of code is referred as a pipeline or chain. Each line starts with a function and ends with a pipe operator, `|>`. The pipe operator in R is used to pass one expression as the input to the next expression, creating a sequence of operations that's easy to read and manage.  [@cr-dplyr]{highlight=\"4-16\"}\n\nWe use the `filter()` function to retain only those rows in the data frame where `Origin` is \"RDU\", `DestState` is either \"NC\" or \"CA\", and with month equals to 11, as we are only focusing the flights departing from RDU, with destinations in North Carolina or in California, in November 2023. [@cr-dplyr]{highlight=\"5-9\"}\n\nWe want to select the variables that are used in the data visualization: `DepDelay`, `ArrDelay`, `DestState`. [@cr-dplyr]{highlight=\"10-12\"}\n\nWe then rename the variable `DestState` to \"Destination_State\". [@cr-dplyr]{highlight=\"13-15\"}\n\nWe finally remove all rows from the `spotify_songs` data frame that contain `NA` values in any column.[@cr-dplyr]{highlight=\"16\"}\n\nWe use `head()` to display the first five rows of the dataset after transformation.[@cr-dplyr]{highlight=\"17\"}\n\n:::{#cr-dplyr}\n::: {.cell}\n\n```{.r .cell-code}\n# Keep this pipe and show it step by step\n# include more variables in select() to identify the flights e.g. flight number, date, destination cities\n\nlibrary(tidyverse)\nflights <- read_csv(here::here(\"closereads\", \"data/rdu-flights-23.csv\"))\n\nflights_rdu <- flights |>\n  filter(\n    origin == \"RDU\",\n    dest_state %in% c(\"NC\", \"CA\"), # NC and CA\n    month == 11\n  ) |>\n  select(\n    c(\"DepDelay\", \"ArrDelay\", \"DestState\")\n  ) |>\n  rename(\n    \"Destination_State\" = DestState\n  )\n\nflights_rdu\n```\n:::\n:::\n\n:::{cr-arrange}\n::: {.cell}\n\n```{.r .cell-code}\n# add arrange and relocate at the end\n\nflights_rdu <- flights |>\n  filter(\n    Origin == \"RDU\",\n    DestState %in% c(\"NC\", \"CA\"), # NC and CA\n    Month == 11\n  ) |>\n  select(\n    c(\"DepDelay\", \"ArrDelay\", \"DestState\")\n  ) |>\n  rename(\n    \"Destination_State\" = DestState\n  ) |>\n  relocate(\n    Destination_State, .before = DepDelay\n  ) |>\n  arrange(\n    desc(DepDelay)\n  )\n\nflights_rdu\n```\n:::\n:::\n\n:::{cr-slice}\n::: {.cell}\n\n:::\n:::\n::::\n\n**Insert inline code cell here**",
    "supporting": [
      "data-transformation-flights_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}